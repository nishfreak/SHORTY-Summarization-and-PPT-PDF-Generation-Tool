/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * main.java
 *
 * Created on Mar 15, 2013, 2:33:02 PM
 */
package src;

import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.poi.hslf.usermodel.*;
import org.apache.poi.hslf.model.*;
import org.apache.poi.hslf.record.TextHeaderAtom;

import java.io.IOException;
import java.io.FileOutputStream;
import java.io.File;
import java.awt.*;
import java.lang.String;
import java.text.BreakIterator;
import java.util.Arrays;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.TableView.TableCell;
import org.apache.poi.hwpf.usermodel.Table;


/**
 *
 * @author kumaran
 */
public class main extends javax.swing.JFrame {
public static String[] sentences=new String[20];
public static String Str=new String();
public static String fontf;
public static int size;
public static Color c;
public static String[] fontNames;

  public static String[] fontSizes;
    /** Creates new form main */
    public main(String txt) {
           
        initComponents();
     
          setLocation( 850, 200 ) ;
       Str=txt.trim();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jFileChooser1 = new javax.swing.JFileChooser();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton1.setText("Create PPT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("      TITLE");

        jLabel2.setText("    CREDITS");

        jLabel3.setText("SAVE NAME");

        jLabel4.setBackground(new java.awt.Color(0, 153, 51));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("                   VISUALIZE SUMMARY IN POWERPOINT SLIDES ");

        jButton2.setText("Specify Styles");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                        .addGap(93, 93, 93))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField5))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextField5ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
           System.out.println("Size:"+main.size);
             System.out.println("font:"+main.fontf);
             System.out.println("color:"+main.c);
 SlideShow ppt = new SlideShow();
        ppt.setPageSize(new Dimension(720, 540));                    
            Slide slide = ppt.createSlide();

                    TextBox box1 = new TextBox();
                    TextRun tr1 = box1.getTextRun();
                    tr1.setRunType(TextHeaderAtom.CENTER_TITLE_TYPE);
                   String str=jTextField1.getText();
                    tr1.setText(str);
                    box1.setAnchor(new Rectangle(54, 78, 612, 115));
                    slide.addShape(box1);

                    TextBox box2 = new TextBox();
                    
                    TextRun tr2 = box2.getTextRun();
                    tr2.getRichTextRuns()[0].setFontSize(30);
                    tr2.setRunType(TextHeaderAtom.CENTRE_BODY_TYPE);
                    String credits=jTextField5.getText();
                            
                    tr2.setText(credits);
                    box2.setAnchor(new Rectangle(128, 304, 504, 168));
                    slide.addShape(box2);
                     String file=jTextField6.getText().trim();
             
     Str.replace("\\:",":\\.");
    Str.replaceAll("\r","");
    Pattern p = Pattern.compile("^\\s*$\\n", Pattern.MULTILINE);
    Matcher m = p.matcher(Str);
        Str=m.replaceAll("");
      
      sentences = Str.split("(?<=[a-z])[\\.\\!\\?]\\s+"); 
                    // Regular reg=new Regular(Str);
                    
   //     sentences=  reg.splitter();           
      
     
       System.out.println(sentences.length);
     for (int j=0;j<sentences.length;j++){  
         System.out.println(j);
      System.out.println(sentences[j]);  
     }         
                     slide2(ppt);
                     if(sentences.length>3)
                     {
                     slide3(ppt); }
                    FileOutputStream out = new FileOutputStream(file);
                    ppt.write(out);
                    JOptionPane.showMessageDialog(null,
								    "Slides Created Successfully Saved.",
								    "File Saved",
								    JOptionPane.INFORMATION_MESSAGE);
                    out.close();
              setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 //MainClass mc=new MainClass(new JFrame());
    
    MainClass m=new MainClass();
        m.newf();
        
   /* size=MainClass.sizef();
            fontf=MainClass.namef();
            c=MainClass.colorf();*/            
             
             // TODO add your handling code here:
}//GEN-LAST:event_jButton2ActionPerformed
                
public static void slide2(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length>3)
{
for (int i=0;i<3;i++)
{  
         
      pp=pp+""+sentences[i].trim()+"\r";
      
}
}
else
    for (int i=0;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
    
System.out.println(pp);

TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
public static void slide3(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=6)
{
for (int i=3;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=3;i<6;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide4(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
public static void slide4(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=9)
{
for (int i=6;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=6;i<9;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide5(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
public static void slide5(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=12)
{
for (int i=9;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=9;i<12;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide6(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
     
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
public static void slide6(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=15)
{
for (int i=12;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=12;i<15;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide7(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
public static void slide7(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=18)
{
for (int i=15;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=15;i<18;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide8(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
   
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }public static void slide8(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=21)
{
for (int i=18;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=18;i<21;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
 slide9(ppt);
    
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide9(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=24)
{
for (int i=21;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=21;i<24;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
slide10(ppt);
    
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide10(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=27)
{
for (int i=24;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=24;i<27;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide11(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide11(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=30)
{
for (int i=27;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=27;i<30;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
slide12(ppt);
    
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide12(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=33)
{
for (int i=30;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=30;i<33;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide13(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide13(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=36)
{
for (int i=33;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=33;i<36;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
slide14(ppt);
    
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide14(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=39)
{
for (int i=36;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=36;i<39;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide15(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide15(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=42)
{
for (int i=39;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=39;i<42;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide16(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide16(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=45)
{
for (int i=42;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=42;i<45;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide17(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
  richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide17(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=48)
{
for (int i=45;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=45;i<48;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide18(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide18(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=51)
{
for (int i=48;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=48;i<51;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide19(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide19(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=54)
{
for (int i=51;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=51;i<54;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

    slide20(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide20(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=57)
{
for (int i=54;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=54;i<57;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

   slide21(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide21(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=60)
{
for (int i=57;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=57;i<60;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

  slide22(ppt); 
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide22(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=63)
{
for (int i=60;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=60;i<63;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

   slide23(ppt);
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide23(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=66)
{
for (int i=63;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=63;i<66;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
slide24(ppt);
   
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide24(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=69)
{
for (int i=66;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=66;i<69;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
slide25(ppt);
   
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide25(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=72)
{
for (int i=69;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=69;i<72;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
slide26(ppt);
   
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
    richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    public static void slide26(SlideShow ppt) throws IOException {
        Slide slide = ppt.createSlide();
         String pp=new String();
         String newline = System.getProperty("line.separator");
if(sentences.length<=75)
{
for (int i=72;i<sentences.length;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }
}
else{
    for (int i=72;i<75;i++)
{  
          
      pp=pp+""+sentences[i].trim()+"\r";
      
    }

   
}
System.out.println(pp);
TextBox box2 = new TextBox();
       RichTextRun richtextrun = box2.getTextRun().
getRichTextRuns()[0];

   
   richtextrun.setFontColor(main.c);
  richtextrun.setFontName(main.fontf);
        TextRun tr2 = box2.getTextRun();
        tr2.setRunType(TextHeaderAtom.BODY_TYPE);
          tr2.getRichTextRuns()[0].setFontSize(main.size);
        tr2.setText(pp);
        box2.setAnchor(new Rectangle(36, 78, 648, 116));
        slide.addShape(box2);


    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
               // new main( ).setVisible(true);
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
