  All-du Paths:   It requires that every du path from every definition of every variable to every use of that definition be exercised under some test.    For the definition on link (1,3) we must exercise paths that include subpaths (1,3,4) and (1,3,5).    The definition on link (4,5) is covered by any path that includes (5,6), such as subpath (1,3,4,5,6, ...).    The (5,6) definition requires paths that include subpaths (5,6,7,4) and (5,6,7,8).    Variable V (Figure 5.6d) is defined only once on link (1,3).    Note that we must test paths that include both subpaths (3,4,5) and (3,5) even though neither of these has V definitions.    Although (7,4) is not used in the test set for variable V, it will be included in the test set that covers the predicate uses of array variable V() and U.   All-Uses Strategy:   The strategy is that at least one definition-clear path from every definition of every variable to every use of that definition be exercised under some test.    Find a covering set of paths under AU for Figure 5.6d.   All-p-Uses/Some-c-Uses and All-c-Uses/Some-p-Uses Strategies:   
Weaker criteria require fewer test cases to satisfy. 
   More formally, the all-p-uses/some-c-uses (APU+C) strategy is defined as follows: for every variable and every definition of that variable, include at least one definition-free path from the definition to every predicate use; if there are definitions of the variable that are not covered by the above prescription, then add computational-use test cases as required to cover every definition.    The all-c-uses/some-p-uses (ACU+P) strategy reverses the bias: first ensure coverage by computational-use cases and if any definition is not covered by the previously selected paths, add such predicate-use cases as are needed to assure that every definition is included in some test.   
In Figure 5.6b, for variables X and Y, any test case satisfies both criteria because definition and uses occur on link (1,3). 
   In Figure 5.6c, for APU+C we can select paths that all take the upper link (12,13) and therefore we do not cover the c-use of Z: but that�s okay according to the strategy�s definition because every definition is covered.    Links (1,3), (4,5), (5,6), and (7,8) must be included because they contain definitions for variable Z.    Find a covering set of test cases under APU+C for all variables in this example�it only takes two tests.    
Figure 5.6d shows a single definition for variable V. C-use coverage is achieved by (1,3,4,5,6,7,8,9,10,11,12,13,2). 
   Specifically, the (1,3) definition is not covered for the (3,5) p-use, the (7,8) definition is not covered for the (8,9), (9,6) and (9, 10) p-uses.   All-Definitions Strategy:   Path (1,3,4,5,6,7,8, . . .) satisfies this criterion for variable Z, whereas any entry/exit path satisfies it for variable V. From the definition of this strategy we would expect it to be weaker than both ACU+P and APU+C.   All-Predicate-Uses, All-Computational Uses Strategies: 
